// Generated by CoffeeScript 1.9.3
<<<<<<< HEAD
(function() {
  var Http;

  Http = (function() {
    function Http() {}

    Http.prototype.get = function(url, dataType, cb) {
      return $.ajax({
        url: url,
        dataType: dataType,
        type: 'get',
        success: function(data) {
          if (cb && typeof cb === 'function') {
            return cb(data);
          }
          return data;
        },
        error: function(xhr) {
          return console.error(xhr.status + ": " + xhr.statusText);
        }
      });
    };

    Http.prototype.getSpine = function(data) {
      var content, entry, i, index, item, j, len, len1, manifest, manifestObj, readerSpine, spine;
      manifestObj = {};
      readerSpine = {};
      content = window.Reader.Parser.prototype.render(data, 'xml')["package"];
      manifest = content.manifest.item;
      spine = content.spine.itemref;
      for (i = 0, len = manifest.length; i < len; i++) {
        item = manifest[i];
        if (item['@attributes']['media-type'] === 'application/xhtml+xml') {
          manifestObj[item['@attributes'].id] = item['@attributes'].href;
=======
var Http;

Http = (function() {
  function Http() {}

  Http.prototype.get = function(url, dataType, cb) {
    return $.ajax({
      url: url,
      dataType: dataType,
      type: 'get',
      success: function(data) {
        if (cb && typeof cb === 'function') {
          return cb(data);
>>>>>>> dd854c4ee057fb2546a520b2d238d7e786243655
        }
        return data;
      },
      error: function(xhr) {
        return console.error(xhr.status + ": " + xhr.statusText);
      }
    });
  };

  Http.prototype.getSpine = function(data) {
    var content, entry, i, index, item, j, len, len1, manifest, manifestObj, readerSpine, spine;
    manifestObj = {};
    readerSpine = {};
    content = window.Reader.Parser.prototype.render(data, 'xml')["package"];
    manifest = content.manifest.item;
    spine = content.spine.itemref;
    for (i = 0, len = manifest.length; i < len; i++) {
      item = manifest[i];
      if (item['@attributes']['media-type'] === 'application/xhtml+xml') {
        manifestObj[item['@attributes'].id] = item['@attributes'].href;
      }
    }
    for (index = j = 0, len1 = spine.length; j < len1; index = ++j) {
      entry = spine[index];
      readerSpine[index] = {
        idref: entry['@attributes'].idref,
        properties: entry['@attributes'].properties,
        properties: entry['@attributes'].properties,
        href: manifestObj[entry['@attributes'].idref]
      };
    }
    return readerSpine;
  };

  return Http;

})();

if (window.Reader == null) {
  window.Reader = {};
}

<<<<<<< HEAD
  if (window.Reader == null) {
    window.Reader = {};
  }

  window.Reader.Http = Http;

}).call(this);
=======
window.Reader.Http = Http;
>>>>>>> dd854c4ee057fb2546a520b2d238d7e786243655
