// Generated by CoffeeScript 1.9.3
var App,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

App = (function() {
  var reader;

  reader = window.Reader;

  function App(options) {
    this.log = bind(this.log, this);
    var defaults;
    defaults = {
      contentUrl: null,
      debug: false,
      spread: true,
      gutter: 0,
      viewport: {
        width: 468,
        height: 680
      },
      container: 'main',
      lazy: false,
      origin: {
        x: 0,
        y: 0
      }
    };
    this.settings = $.extend({}, defaults, options);
    this.utils = new window.Reader.Utils;
    this.parser = new window.Reader.Parser;
    this.http = new window.Reader.Http;
    this.aspect = new window.Reader.Aspect(this.settings);
    this.layout = new window.Reader.Layout(this.settings);
    this.isResizing = false;
    this.nodeCt = 0;
    this.layout.render();
    $(document).on('reader.contentReady', (function(_this) {
      return function() {
        _this.log("\nReader content has been added to the DOM.");
        _this.nodeCt = $('*').length;
        return _this.aspect.setZoom(function() {
          return _this.aspect.adjustArticlePosition();
        });
      };
    })(this));
    $(document).on('reader.pagesFit', (function(_this) {
      return function() {
        return _this.log("\nSizing pages to `window`.");
      };
    })(this));
    $(document).on('reader.articlesPositioned', (function(_this) {
      return function() {
        return _this.log("\nAll articles successfully positioned.");
      };
    })(this));
  }

  App.prototype.log = function(args) {};

  App.prototype.updateNodeCt = function(nodes, currentSection, lastSection) {
    if (currentSection === lastSection) {
      this.log("\nAll sections successfully added to the DOM.");
      return $(document).trigger('reader.contentReady');
    }
  };

  return App;

})();

if (window.Reader == null) {
  window.Reader = {};
}

window.Reader.App = App;
