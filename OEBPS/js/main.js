// Generated by CoffeeScript 1.9.3
var Reader,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Reader = window.Reader != null ? window.Reader : window.Reader = {};

window.Reader = (function() {
  Reader.debug = true;

  Reader.prototype.log = function(args) {
    if (Reader.debug) {
      return window.console.log(args);
    }
  };

  Reader.prototype.updatenodeCount = function(nodes, currentSection, lastSection) {
    if (currentSection === lastSection) {
      this.log("\nAll sections successfully added to the DOM.");
      return $(document).trigger('reader.contentReady');
    }
  };

  function Reader(options) {
    this.updatenodeCount = bind(this.updatenodeCount, this);
    this.log = bind(this.log, this);
    var defaults;
    defaults = {
      scope: 'reader',
      transitionSpeed: 250,
      contentUrl: null,
      debug: false,
      spread: true,
      gutter: 0,
      hideOnResize: false,
      viewport: {
        width: 468,
        height: 680
      },
      outerContainer: 'main',
      innerContainer: '#content',
      nativeScroll: false,
      lazy: false,
      origin: {
        x: 0,
        y: 0
      }
    };
    this.settings = $.extend({}, defaults, options);
    this.utils = new Reader.Utils;
    this.parser = new Reader.Parser;
    this.http = new Reader.Http;
    this.aspect = new Reader.Aspect(this.settings);
    this.layout = new Reader.Layout(this.settings);
    this.navigate = new Reader.Navigate(this.settings);
    this.isResizing = false;
    this.isPositioned = false;
    this.nodeCount = 0;
    $(document).on('reader.contentReady', (function(_this) {
      return function() {
        _this.log("\nReader content has been added to the DOM.");
        _this.nodeCount = $('*').length;
        return _this.aspect.setZoom(function() {
          return _this.aspect.adjustArticlePosition();
        });
      };
    })(this));
    $(document).on('reader.pagesFit', (function(_this) {
      return function() {
        return _this.log("\nSizing pages to `window`.");
      };
    })(this));
    $(document).on('reader.articlesPositioned', (function(_this) {
      return function() {
        _this.isPositioned = true;
        return _this.log("\nAll articles successfully positioned.");
      };
    })(this));
    this.layout.render();
    $(window).on({
      'resize': (function(_this) {
        return function() {
          var $body, resizeTimer;
          if (!_this.isPositioned) {
            return;
          }
          _this.isResizing = true;
          resizeTimer = null;
          $body = $('body');
          $body.addClass(_this.settings.scope + "-resize " + _this.settings.scope + "-resize-start");
          clearTimeout(resizeTimer);
          return _this.utils.waitForFinalEvent((function() {
            _this.isResizing = false;
            _this.aspect.setZoom();
            $body.removeClass(_this.settings.scope + "-resize-start");
            $body.addClass(_this.settings.scope + "-resize-end");
            setTimeout(function() {
              return $body.removeClass(_this.settings.scope + "-resize " + _this.settings.scope + "-resize-end");
            }, _this.settings.transitionSpeed);
          }), 500, 'some unique string');
        };
      })(this)
    });
    $(document).on('click', (function(_this) {
      return function(e) {
        console.log('click');
        return _this.navigate.goToStart();
      };
    })(this));
  }

  return Reader;

})();
